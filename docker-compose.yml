version: "3.9"

services:
  # ────────────────────────────────────────────────────────────
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"

  # ────────────────────────────────────────────────────────────
  # FastAPI service (unchanged)
  crypto_bot:
    image: crypto_bot
    build:
      context: .
      dockerfile: ./Dockerfile
    ports:
      - "8000:8000"
    env_file:
      - .env
    volumes:
      - .:/app
    depends_on:
      - redis
    restart: always

  # ────────────────────────────────────────────────────────────
  # Legacy Celery worker (default "celery" + old "enrich" queue)
  celery_worker:
    build:
      context: .
      dockerfile: ./Dockerfile
    command: >
      celery -A app.celery.celery_app worker
             --loglevel=DEBUG
             -Q celery,enrich
    volumes:
      - .:/app
    env_file:
      - .env
    depends_on:
      - redis
    restart: always

  # ────────────────────────────────────────────────────────────
  # Beat scheduler  – publishes dispatcher every hour
  celery_beat:
    build:
      context: .
      dockerfile: ./Dockerfile
    command: >
      celery -A app.celery.celery_app beat
             --loglevel=INFO
    volumes:
      - .:/app
    env_file:
      - .env
    depends_on:
      - redis
    restart: always

  # ────────────────────────────────────────────────────────────
  # dispatcher queue (1 worker)
  worker_dispatch:
    build:
      context: .
      dockerfile: ./Dockerfile
    command: >
      celery -A app.celery.celery_app worker
             --loglevel=INFO
             -Q dispatch
             -c 1
    volumes:
      - .:/app
    env_file:
      - .env
    depends_on:
      - redis
    restart: always

  # orchestrate queue (1 worker)
  worker_orchestrate:
    build:
      context: .
      dockerfile: ./Dockerfile
    command: >
      celery -A app.celery.celery_app worker
             --loglevel=INFO
             -Q orchestrate
             -c 1
             --max-tasks-per-child=100     
             --max-memory-per-child=300000  
    volumes:
      - .:/app
    env_file:
      - .env
    depends_on:
      - redis
    restart: always

  # decode queue – CPU heavy
  worker_decode:
    build:
      context: .
      dockerfile: ./Dockerfile
    command: >
      celery -A app.celery.celery_app worker
             --loglevel=INFO
             -Q decode
             -c 2
             --max-tasks-per-child=100     
             --max-memory-per-child=300000  
    volumes:
      - .:/app
    env_file:
      - .env
    depends_on:
      - redis
    restart: always

  # aggregate queue – DB heavy
  worker_aggregate:
    build:
      context: .
      dockerfile: ./Dockerfile
    command: >
      celery -A app.celery.celery_app worker
             --loglevel=INFO
             -Q aggregate
             -c 2
             --max-tasks-per-child=100     
             --max-memory-per-child=300000  
    volumes:
      - .:/app
    env_file:
      - .env
    depends_on:
      - redis
    restart: always
